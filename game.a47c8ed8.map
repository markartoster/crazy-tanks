{"version":3,"sources":["dist/assets/Js/CST.ts","dist/assets/Js/Scenes/loadScene.ts","dist/assets/Js/Scenes/menuScene.ts","dist/assets/Js/Scenes/playScene.ts","dist/assets/Js/game.ts"],"names":[],"mappings":"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","file":"game.a47c8ed8.map","sourceRoot":"..","sourcesContent":["export const CST = {\n    SCENES: {\n        LOAD: \"LOAD_SCENE\",\n        MENU: \"MENU_SCENE\",\n        TESTLEVEL: \"PLAY_SCENE\"\n    },\n\n    SPRITES: {\n        UI: {\n            PLAYER: \"2playerIcon.png\",\n            START: \"Start.png\"\n        },\n        BG: {\n            MENU_BG: {\n                BG: \"background.png\"\n            }\n        },\n        GAME: {\n            ENEMIES: {\n                TANK: \"Enemy.png\"\n            },\n            FACTORY: \"factoryEnemy.png\",\n        },\n        WORLD: {\n            CRAZY_TANK_TEXTURES: \"CrazyTankTextures.png\"\n        },\n        TILESETS: {\n            CRAZY_TANK_TEXTURES: \"CrazyTankTextures\",\n        },\n        MISC: {\n            BULLET: \"Bullet.png\",\n            LIFE: \"Life-icon.png\"\n        },\n        PLAYER: {\n            PLAYER: \"Player.png\"\n        },\n        EFFECTS: {\n            EXPLOSION: \"Explosion.png\"\n        }\n    },\n\n    LEVELS: {\n        LEVEL0: \"level0.json\",\n        LEVEL2: \"level2.json\",\n        LEVEL3: \"level3.json\",\n        LEVEL4: \"level4.json\",\n        LEVEL5: \"level5.json\"\n    },\n\n    SOUNDS: {\n        BGM: {\n        },\n        FX: {\n            EXPLOSION: \"explosion.wav\",\n            SHOOT: \"shoot.wav\",\n            HIT: \"hit.wav\",\n            TANK_IDLE: \"tank-idle.wav\",\n            TANK_MOVE: \"tank-move.wav\"\n        }\n    }\n}","import { CST } from '../CST';\n\nexport class LoadScene extends Phaser.Scene {\n    constructor() {\n        super({key: CST.SCENES.LOAD})\n    }\n    loadImages() {\n        this.load.setPath('./assets/Sprites/bg');       \n        for (const prop in CST.SPRITES.BG.MENU_BG) {\n            //@ts-ignore\n            this.load.image(CST.SPRITES.BG.MENU_BG[prop], CST.SPRITES.BG.MENU_BG[prop]);\n        }\n        this.load.setPath('./assets/Sprites/world');\n        for (const prop in CST.SPRITES.WORLD) {\n            //@ts-ignore\n            this.load.image(CST.SPRITES.WORLD[prop], CST.SPRITES.WORLD[prop])\n        }\n        this.load.setPath('./assets/Sprites/misc');\n        for (const prop in CST.SPRITES.MISC) {\n            //@ts-ignore\n            this.load.image(CST.SPRITES.MISC[prop], CST.SPRITES.MISC[prop])\n        }\n    }\n\n    loadLevels() {\n        this.load.setPath('./assets/Levels');\n        for (const prop in CST.LEVELS) {\n            //@ts-ignore\n            this.load.tilemapTiledJSON(CST.LEVELS[prop], CST.LEVELS[prop])\n        }\n    }\n\n    loadSpritesheets() {\n        this.load.spritesheet(CST.SPRITES.PLAYER.PLAYER, 'assets/Sprites/player/Player.png', {frameHeight: 32, frameWidth: 32})\n        this.load.spritesheet(CST.SPRITES.GAME.ENEMIES.TANK, 'assets/Sprites/enemies/Enemy.png', {frameHeight: 32, frameWidth: 32})\n        this.load.spritesheet(CST.SPRITES.EFFECTS.EXPLOSION, 'assets/Sprites/effects/Explosion.png', {frameHeight: 32, frameWidth: 32})\n        this.load.spritesheet(CST.SPRITES.GAME.FACTORY, 'assets/Sprites/world/factoryEnemy.png', {frameHeight: 32, frameWidth: 32})\n        this.load.spritesheet(CST.SPRITES.UI.START, 'assets/Sprites/ui/Start.png', {frameHeight: 28, frameWidth: 124})\n        this.load.spritesheet(CST.SPRITES.UI.PLAYER, 'assets/Sprites/ui/2playerIcon.png', {frameHeight: 34, frameWidth: 34})\n    }\n\n    loadAudio() {\n        this.load.setPath('./assets/Sounds/fx');\n        for (const prop in CST.SOUNDS.FX) {\n            //@ts-ignore\n            this.load.audio(CST.SOUNDS.FX[prop], CST.SOUNDS.FX[prop])  \n        }\n    }\n\n    preload() { \n        this.loadSpritesheets(); \n        this.loadImages();\n        this.loadLevels();\n        this.loadAudio();\n        let loadingBar = this.add.graphics({\n            fillStyle: {\n                color: 0x32cd32\n            }\n        })\n        this.load.on(\"progress\", (percent) => {\n            loadingBar.fillRect(0, this.game.renderer.height/2, this.game.renderer.width * percent, 80)\n        })\n    }\n\n    create(){\n        this.anims.create({\n            key: 'move-enemy',\n            frames: this.anims.generateFrameNumbers(CST.SPRITES.GAME.ENEMIES.TANK, {\n                start: 0,\n                end: 2\n            }),\n            frameRate: 15,\n            repeat: -1\n        })\n        this.anims.create({\n            key: 'move',\n            frames: this.anims.generateFrameNumbers(CST.SPRITES.PLAYER.PLAYER, {\n                start: 0,\n                end: 2\n            }),\n            frameRate: 15,\n        })\n        this.anims.create({\n            key: 'explo',\n            frames: this.anims.generateFrameNumbers(CST.SPRITES.EFFECTS.EXPLOSION, {\n                start: 0,\n                end: 6\n            }),\n            frameRate: 15,\n        })\n        this.scene.start(CST.SCENES.MENU);\n    }\n}","import {\n  CST\n} from '../CST';\nimport {\n  start\n} from 'repl';\nimport {\n  Input\n} from 'phaser';\n\nexport class MenuScene extends Phaser.Scene {\n\n  explosion!: Phaser.Sound.WebAudioSound;\n\n  constructor() {\n    super({\n      key: CST.SCENES.MENU\n    })\n  }\n\n  init() {}\n\n  create() {\n    this.sound.stopAll();\n    const explosion = this.sound.add(CST.SOUNDS.FX.EXPLOSION);\n    let isSecondPlayer = false;\n    let image = this.add.image(0, 0, CST.SPRITES.BG.MENU_BG.BG).setOrigin(0).setDepth(0);\n    image.displayHeight = 640;\n    image.displayWidth = 800;\n    let startButton: Phaser.GameObjects.Image = this.add.image(319, 453, CST.SPRITES.UI.START, 0);\n    startButton.setDepth(1);\n    startButton.setInteractive();\n    startButton.on('pointerover', () => {\n      startButton.setTexture(CST.SPRITES.UI.START, 1);\n    });\n    startButton.on('pointerout', () => {\n      startButton.setTexture(CST.SPRITES.UI.START, 0);\n    });\n    startButton.on('pointerdown', () => {\n      startButton.setTexture(CST.SPRITES.UI.START, 2);\n      startButton.removeInteractive();\n      explosion.play();\n      this.time.addEvent({\n        delay: 2000,\n        callback: () => {\n          this.scene.start(CST.SCENES.TESTLEVEL, {\n            level: 0\n          });\n        }\n      })\n    })\n    let secondPlayerIcon = this.add.image(346, 492, CST.SPRITES.UI.PLAYER, 0);\n    secondPlayerIcon.setInteractive();\n    secondPlayerIcon.on('pointerdown', () => {\n      if (!isSecondPlayer) {\n        secondPlayerIcon.setTexture(CST.SPRITES.UI.PLAYER, 1);\n        isSecondPlayer = true;\n      } else if (isSecondPlayer) {\n        secondPlayerIcon.setTexture(CST.SPRITES.UI.PLAYER, 0);\n        isSecondPlayer = false;\n      }\n    })\n  }\n}","import {\n  CST\n} from '../CST';\nimport {\n  ENGINE_METHOD_ALL\n} from 'constants';\nimport {\n  log\n} from 'util';\nimport {\n  logicalExpression\n} from 'babel-types';\n\n\nexport class PlayScene extends Phaser.Scene {\n\n  mapKeyArray!: Array < string > ;\n  player!: Phaser.Physics.Arcade.Sprite;\n  playerStartPosition!: {x: number, y: number};\n  explosion!: Phaser.Physics.Arcade.Sprite;\n  isExplosion!: boolean;\n  playerLifes!: integer;\n  playerLifesGroup!: Phaser.GameObjects.Group;\n  playerBullets!: Phaser.Physics.Arcade.Group;\n  isPlayerShooting!: boolean;\n  cursors!: Phaser.Input.Keyboard.CursorKeys;\n  fire!: Phaser.Input.Keyboard.CursorKeys;\n  directions!: Array < string > ;\n  enemy!: Phaser.Physics.Arcade.Sprite;\n  enemyBehaviors!: Array < string > ;\n  enemySpawn1Counter!: integer;\n  enemySpawnArray!: Array < Phaser.GameObjects.Group > ;\n  enemyAliveArray!: Array < Phaser.Physics.Arcade.Sprite > ;\n  factories!: Phaser.Tilemaps.DynamicTilemapLayer;\n  factoryCounter!: number;\n  factoriesTiles!: Array < Phaser.Tilemaps.Tile > ;\n  wallLayer!: Phaser.Tilemaps.DynamicTilemapLayer;\n  eventsLayer!: Phaser.Tilemaps.DynamicTilemapLayer;\n  floorLayer!: Phaser.Tilemaps.DynamicTilemapLayer;\n  grassLayer!: Phaser.Tilemaps.DynamicTilemapLayer;\n  enemyBullets!: Phaser.Physics.Arcade.Group;\n  counter!: integer;\n  aiCounter!: integer;\n  max!: integer;\n  min!: integer;\n  maxEnemy!: integer;\n  minEnemy!: integer;\n  maxBullet!: integer;\n  minBullet!: integer;\n  explosionSound!: Phaser.Sound.BaseSound;\n  hitSound!: Phaser.Sound.BaseSound;\n  shootSound!: Phaser.Sound.BaseSound;\n  tankIdleSound!: Phaser.Sound.BaseSound;\n  tankMoveSound!: Phaser.Sound.BaseSound;\n\n  constructor() {\n    super({\n      key: CST.SCENES.TESTLEVEL\n    })\n  }\n\n  init(data: object) {\n    this.data.set('level', data.level);\n  }\n\n  create() {\n    this.sound.stopAll();\n    this.explosionSound = this.sound.add(CST.SOUNDS.FX.EXPLOSION);\n    this.hitSound = this.sound.add(CST.SOUNDS.FX.HIT);\n    this.shootSound = this.sound.add(CST.SOUNDS.FX.SHOOT);\n    this.tankIdleSound = this.sound.add(CST.SOUNDS.FX.TANK_IDLE);\n    this.tankMoveSound = this.sound.add(CST.SOUNDS.FX.TANK_MOVE);\n    this.min = 2000;\n    this.max = 3000;\n    this.maxEnemy = 0;\n    this.factoryCounter = 0;\n    this.minEnemy = 1;\n    this.maxBullet = 3000;\n    this.minBullet = 1500;\n    this.counter = 0;\n    this.aiCounter = 0;\n    this.directions = ['00', '01', '10', '11']\n    this.enemySpawnArray = [];\n    this.enemyBehaviors = ['aggressive', 'defensive', 'roam'];\n    this.enemyAliveArray = [];\n    this.mapKeyArray = [];\n    this.playerLifes = 3;\n    this.playerStartPosition = {\n      x: 0,\n      y: 0\n    };\n    for (let key in CST.LEVELS) {\n      this.mapKeyArray.push(CST.LEVELS[key]);\n    }\n    const map = this.make.tilemap({\n      key: this.mapKeyArray[this.data.get('level')]\n    });\n    const world = map.addTilesetImage(CST.SPRITES.TILESETS.CRAZY_TANK_TEXTURES, CST.SPRITES.WORLD.CRAZY_TANK_TEXTURES);\n    this.floorLayer = map.createDynamicLayer(\"Floor\", world, 0, 0);\n    this.wallLayer = map.createDynamicLayer(\"Walls\", world, 0, 0);\n    this.grassLayer = map.createDynamicLayer(\"Grass\", world, 0, 0);\n    this.grassLayer.setDepth(3);\n    this.factories = map.createDynamicLayer(\"Factories\", world, 0, 0);\n    this.eventsLayer = map.createDynamicLayer(\"Events\", world, 0, 0);\n    this.eventsLayer.setVisible(false);\n    this.playerLifesGroup = this.add.group();\n    this.playerLifesGroup.createMultiple({\n      key: CST.SPRITES.MISC.LIFE,\n      repeat: this.playerLifes - 1\n    })\n    this.playerLifesGroup.getChildren().forEach((playerLife: Phaser.Physics.Arcade.Sprite, index) => {\n      let widthHelper = 32 * index + 1\n      playerLife.setPosition(this.game.canvas.width - 32 - widthHelper, this.game.canvas.height - 32);\n      playerLife.setOrigin(0);\n      playerLife.setDepth(2);\n      playerLife.setActive(true);\n      playerLife.setVisible(true);\n\n    })\n    this.getTilesFromLayer(this.factories, (factory) => {\n      this.maxEnemy += 3;\n      this.factoryCounter += 1;\n      this.enemySpawnArray.push(this.physics.add.group({\n        defaultKey: CST.SPRITES.GAME.ENEMIES.TANK,\n        classType: Phaser.Physics.Arcade.Sprite,\n      })) \n    })\n    this.getTilesFromLayer(this.eventsLayer, (event) => {\n      this.playerStartPosition.x = event.pixelX;\n      this.playerStartPosition.y = event.pixelY;\n    });\n    this.wallLayer.setCollisionByProperty({\n      collides: true\n    });\n    this.factories.setCollisionByProperty({\n      collides: true\n    });\n    this.enemyBullets = this.physics.add.group({\n      defaultKey: CST.SPRITES.MISC.BULLET,\n      maxSize: 20,\n      classType: Phaser.Physics.Arcade.Sprite\n    });\n    this.enemySpawn1Counter = 10000;\n    this.isExplosion = false;\n    this.player = this.physics.add.sprite(\n      this.playerStartPosition.x + 16, \n      this.playerStartPosition.y + 16, \n      CST.SPRITES.PLAYER.PLAYER)\n      .setDepth(2)\n      .setData('direction', '10')\n      .setData('type', 'player')\n      .setData('immortal', false);\n    this.isPlayerShooting = false;\n    this.cursors = this.input.keyboard.createCursorKeys();\n    this.playerBullets = this.physics.add.group({\n      defaultKey: CST.SPRITES.MISC.BULLET,\n      maxSize: 3,\n      classType: Phaser.Physics.Arcade.Sprite\n    });\n    this.enemySpawnArray.forEach((enemySpawn, index) => {\n      this.physics.world.addCollider(enemySpawn, this.player, (player: Phaser.Physics.Arcade.Sprite, enemy: Phaser.Physics.Arcade.Group) => {\n        this.changeEnemyDirection(enemy, this.turnBack(enemy));\n        if (!player.getData('immortal')) {\n          this.killPlayer(player);\n        }\n      });\n      this.physics.world.addCollider(enemySpawn, this.wallLayer, (enemy: Phaser.Physics.Arcade.Group, wall: Phaser.Physics.Arcade.Sprite) => {\n        this.time.addEvent({\n          delay: 100,\n          callback: () => {\n            this.changeEnemyDirection(enemy, this.changeDirectionAtCollision(enemy));\n          }\n        });\n      });\n      this.physics.world.addCollider(this.playerBullets,\n         enemySpawn, (\n          bullet: Phaser.Physics.Arcade.Sprite, \n          enemy: Phaser.Physics.Arcade.Sprite) => {\n        enemy.destroy();\n        this.explosion = this.spawnExplosion(enemy.x, enemy.y, CST.SPRITES.EFFECTS.EXPLOSION);\n        this.isExplosion = true;\n        this.enemyAliveArray.splice(-1, 1);\n        bullet.setActive(false);\n        bullet.destroy();\n      })\n    });\n    this.physics.world.addCollider(this.player, this.wallLayer, (player: Phaser.Physics.Arcade.Sprite, wall: Phaser.Physics.Arcade.Sprite) => {});\n    this.physics.world.addCollider(this.enemyBullets, this.wallLayer, (bullet: Phaser.Physics.Arcade.Sprite, wall: Phaser.Tilemaps.Tile) => {\n      this.collisionBulletWall(bullet, wall);\n    })\n    this.physics.world.addCollider(this.enemyBullets, this.player, (player: Phaser.Physics.Arcade.Sprite, bullet: Phaser.Physics.Arcade.Sprite) => {\n      bullet.setActive(false);\n      bullet.destroy();\n      if (!player.getData('immortal')) {\n        this.killPlayer(player);\n      }\n    })\n    this.physics.world.addCollider(this.playerBullets, this.wallLayer, (bullet: Phaser.Physics.Arcade.Sprite, wall: Phaser.Tilemaps.Tile) => {\n      this.collisionBulletWall(bullet, wall);\n    })\n\n    this.physics.world.addCollider(this.playerBullets, this.factories, (bullet: Phaser.Physics.Arcade.Sprite, factory: Phaser.Tilemaps.Tile) => {\n      bullet.setActive(false);\n      bullet.destroy();\n      factory.properties.life--;\n      switch (factory.properties.life) {\n        case 4:\n        case 3:\n        case 2:\n        case 1:\n          this.factoryUpdate(factory, factory.properties.life);\n          break;\n\n        case 0:\n          this.factories.removeTileAt(factory.x, factory.y);\n          this.factoryCounter--;\n          if (this.factoryCounter === 0) {\n            this.enemySpawnArray.forEach(enemySpawn => {\n              enemySpawn.getChildren().forEach(enemy => {\n                this.add.existing(enemy);\n                enemy.setData('behavior', 'aggressive');\n              })\n            })\n          }\n          this.explosion = this.spawnExplosion(factory.pixelX + factory.width / 2, factory.pixelY + factory.height / 2, CST.SPRITES.EFFECTS.EXPLOSION);\n          this.factories.putTileAt(Math.floor(Math.random() * (19 - 17 + 1) + 17), factory.x, factory.y).setFlip(Math.round(Math.random()), Math.round(Math.random()));\n          break;\n        default:\n          break;\n      }\n    })\n  }\n\n  factoryUpdate(factory: Phaser.Tilemaps.Tile, caseNumber: number) {\n    this.hitSound.play();\n    this.factories.putTileAt(24 - caseNumber, factory.x, factory.y, true);\n    this.factories.setCollisionByProperty({\n      collides: true\n    })\n  }\n\n  update(time, delta) {\n    this.counter += delta;\n    this.aiCounter += delta;\n    this.enemySpawn1Counter += delta;\n    this.stopPlayer();\n    this.finishLevel();\n    this.makeAiDecisions();\n    this.onExplosion();\n    if (this.cursors.up.isDown && this.player.active === true) {\n      this.movePlayerTank({x: 0, y: -128}, '10', 0);\n    }\n    if (this.cursors.down.isDown && this.player.active === true) {\n      this.movePlayerTank({x: 0, y: 128}, '11', 180);\n    }\n    if (this.cursors.right.isDown && this.player.active === true) {\n      this.movePlayerTank({x: 128, y: 0}, '01', 90);\n    }\n    if (this.cursors.left.isDown && this.player.active === true) {\n      this.movePlayerTank({x: -128, y: 0}, '00', -90);\n    }\n    if (this.input.keyboard.checkDown(this.cursors.space, 1000)) {\n      this.shootBullet(this.player);\n    }\n  }\n\n  getTilesFromLayer(layer: Phaser.Tilemaps.DynamicTilemapLayer, callback: EachTileCallback){\n    layer.forEachTile(callback, undefined, undefined, undefined, undefined, undefined, {\n      isNotEmpty: true\n    });\n  }\n\n  movePlayerTank(velocity: {\n    x: number,\n    y: number\n  }, direction: string, angle: number) {\n    this.player.setVelocity(velocity.x, velocity.y)\n    .setData('direction', direction)\n    .setAngle(angle)\n    .play('move', true);\n    this.tankIdleSound.stop();\n    this.tankMoveSound.play(undefined, {\n      loop: true,\n      volume: .3\n    });\n  }\n\n  spawnExplosion(x: number, y: number, key: string) {\n    this.explosionSound.play();\n    this.isExplosion = true;\n    return this.physics.add.sprite(x, y, key).play('explo');\n  }\n\n  killPlayer(player) {\n    this.playerLifes--;\n    this.explosion = this.spawnExplosion(player.x, player.y, CST.SPRITES.EFFECTS.EXPLOSION);\n    if (this.playerLifes !== 0) {\n      this.playerLifesGroup.remove(this.playerLifesGroup.getChildren()[this.playerLifesGroup.getChildren().length - 1], true);\n      player.setX(this.playerStartPosition.x + 16);\n      player.setY(this.playerStartPosition.y + 16);\n    } else if (this.playerLifes === 0) {\n      this.scene.start(CST.SCENES.MENU);\n    }\n    player.setData('immortal', true);\n    this.time.addEvent({\n      delay: 2000,\n      callback: () => {\n        player.setData('immortal', false);\n      }\n    })\n  }\n\n  shootBullet(shooter: Phaser.Physics.Arcade.Sprite) {\n    let bullet: Phaser.Physics.Arcade.Sprite;\n    if (shooter.getData('type') === 'enemy') {\n      bullet = this.enemyBullets.get(shooter.x, shooter.y);\n    } else if (shooter.getData('type') === 'player') {\n      this.shootSound.play();\n      bullet = this.playerBullets.get(shooter.x, shooter.y);\n    }\n    if (bullet) {\n      bullet.setActive(true);\n      bullet.setVisible(true);\n      bullet.depth = 1;\n      if (shooter.data.get('direction') === '00') {\n        bullet.setVelocity(-160, 0);\n        bullet.setAngle(0);\n      } else if (shooter.data.get('direction') === '01') {\n        bullet.setVelocity(160, 0);\n        bullet.setAngle(180);\n      } else if (shooter.data.get('direction') === '10') {\n        bullet.setVelocity(0, -160);\n        bullet.setAngle(90);\n      } else if (shooter.data.get('direction') === '11') {\n        bullet.setVelocity(0, 160);\n        bullet.setAngle(-90);\n      }\n    }\n  }\n\n  aiShoot() {\n    this.enemySpawnArray.forEach(enemySpawn => {\n      enemySpawn.getChildren().forEach(enemy => {\n        setTimeout(() => {\n          this.shootBullet(enemy);\n        }, Math.round(Math.random() * (this.maxBullet - this.minBullet + 1) + this.minBullet))\n        this.counter = 0;\n      })\n    })\n  }\n\n  makeAiDecision() {\n    this.enemySpawnArray.forEach(enemySpawn => {\n      enemySpawn.getChildren().forEach(enemy => {\n        this.randomAiDecision(enemy);\n      })\n    })\n    this.aiCounter = 0;\n  }\n\n  spawnEnemy() {\n    this.spawnEnemyAtLocation(this.getFactoriesCoordinates());\n    this.enemySpawn1Counter = 0;\n  }\n\n  getFactoriesCoordinates() {\n    let factoryCoordinates: Array < Object > = []\n    this.factories.forEachTile((factory, index) => {\n      if (factory.canCollide === true)\n        factoryCoordinates.push({\n          x: factory.pixelX,\n          y: factory.pixelY\n        })\n    }, undefined, undefined, undefined, undefined, undefined, {\n      isNotEmpty: true\n    });\n    return factoryCoordinates;\n  }\n\n  randomAiDecision(enemy: Phaser.Physics.Arcade.Sprite) {\n    setTimeout(() => {\n      this.changeDirectionAtRandom(enemy)\n    }, Math.round(Math.random() * (this.max - this.min - 1000 + 1) + this.min - 1000));\n  }\n\n  changeEnemyDirection(enemy: Phaser.Physics.Arcade.Sprite, direction: string) {\n    if (direction === '00') {\n      enemy.setVelocity(-128, 0)\n      .setData('direction', '00')\n      .setAngle(-90);\n    } else if (direction === '01') {\n      enemy.setVelocity(128, 0)\n      .setData('direction', '01')\n      .setAngle(90);\n    } else if (direction === '10') {\n      enemy.setVelocity(0, -128)\n      .setData('direction', '10')\n      .setAngle(0);\n    } else if (direction === '11') {\n      enemy.setVelocity(0, 128)\n      .setData('direction', '11')\n      .setAngle(180);\n    }\n  }\n\n  changeDirectionAtCollision(enemy) {\n    let direction = enemy.getData('direction');\n    if (direction === '00' || direction === '01') {\n      direction = ['10', '11'][Math.round(Math.random() * 1 - 0)];\n    } else if (direction === '10' || direction === '11') {\n      direction = ['00', '01'][Math.round(Math.random() * 1 - 0)];\n    }\n    return direction;\n  }\n\n  turnBack(enemy) {\n    let direction = enemy.getData('direction');\n    if (direction === '00') {\n      direction = '01'\n    } else if (direction === '01') {\n      direction = '00'\n    } else if (direction === '10') {\n      direction = '11'\n    } else if (direction === '11') {\n      direction = '10'\n    }\n    return direction;\n  }\n\n  changeDirectionAtRandom(enemy: Phaser.Physics.Arcade.Sprite) {\n    let enemyBehavior = enemy.getData('behavior');\n    let direction;\n\n    if (enemyBehavior === 'aggressive') {\n      direction = this.decideOnDirection(this.player, enemy);\n    } else if (enemyBehavior === 'defensive') {\n      direction = this.decideOnDirection(this.getClosestTarget(enemy, this.getFactoriesCoordinates()), enemy);\n    } else if (enemyBehavior === 'roam') {\n      direction = this.directions[(Math.round(Math.random() * (3 - 0) + 0))]\n    }\n    this.changeEnemyDirection(enemy, direction);\n  }\n\n  decideOnDirection(target: any, enemy: Phaser.Physics.Arcade.Sprite) {\n    let direction;\n    if(target.x != enemy.x && target.y != enemy.y) {\n      direction = this.primarySituations(target, enemy);\n    }\n    if((target.x !== enemy.x && target.y === enemy.y) || (target.x === enemy.x && target.y !== enemy.y)) {\n      direction = this.advancedSituations(target, enemy);\n    }\n    if (target.x === enemy.x && target.y === enemy.y) {\n      direction = this.directions[(Math.round(Math.random() * (3 - 0) + 0))];\n    }\n    return direction;\n  }\n\n  primarySituations(target: any, enemy: Phaser.Physics.Arcade.Sprite) {\n    let direction = null;\n    if (target.x > enemy.x && target.y > enemy.y) {\n      direction = ['01', '11'][Math.round(Math.random() * 1 - 0)];\n    } else if (target.x < enemy.x && target.y < enemy.y) {\n      direction = ['00', '10'][Math.round(Math.random() * 1 - 0)];\n    } else if (target.x > enemy.x && target.y < enemy.y) {\n      direction = ['01', '10'][Math.round(Math.random() * 1 - 0)];\n    } else if (target.x < enemy.x && target.y > enemy.y) {\n      direction = ['00', '11'][Math.round(Math.random() * 1 - 0)];\n    }\n    \n    return direction;\n  }\n\n  advancedSituations(target: any, enemy: Phaser.Physics.Arcade.Sprite) {\n    let direction = null;\n    if (target.x == enemy.x && target.y > enemy.y) {\n      direction = '11';\n    } else if (target.x == enemy.x && target.y < enemy.y) {\n      direction = '10';\n    } else if (target.x > enemy.x && target.y == enemy.y) {\n      direction = '01';\n    } else if (target.x < enemy.x && target.y == enemy.y) {\n      direction = '00';\n    }\n    return direction;\n  }\n\n  getClosestTarget(target1: any, target2: any) {\n    let distance = 0;\n    let distanceArray: any[] = [];\n    let closestTarget: object;\n    target2.forEach((target) => {\n      distance = Math.abs((Math.pow((target1.x - target.x), 2) + Math.pow((target1.y - target.y), 2)));\n      target.distance = distance;\n      distanceArray.push(distance);\n    })\n    distanceArray.sort();\n    target2.forEach((target: any) => {\n      if (target.distance === distanceArray[0]) {\n        closestTarget = target;\n      }\n    })\n    return closestTarget;\n  }\n\n  spawnEnemyAtLocation(factoryCoordinates: Array < Object > ) {\n    for (let index = 0; index < this.factoryCounter; index++) {\n      if (this.enemyAliveArray.length < this.maxEnemy) {\n        let enemy: Phaser.Physics.Arcade.Sprite = this.enemySpawnArray[index].get();\n        //@ts-ignore\n        enemy.setPosition(factoryCoordinates[index].x + enemy.width / 2,\n                          factoryCoordinates[index].y + enemy.height / 2);\n        enemy.setDepth(2);\n        enemy.setData('type', 'enemy');\n        enemy.setData('behavior', this.enemyBehaviors[\n          Math.floor(Math.random() * (this.enemyBehaviors.length - 0) + 0)\n        ])\n        enemy.setActive(true);\n        enemy.setVisible(true);\n        enemy.play('move-enemy');\n        this.enemyAliveArray = [...this.enemyAliveArray, enemy];\n        this.changeDirectionAtRandom(enemy);\n      }\n    }\n  }\n\n  collisionBulletWall(bullet: Phaser.Physics.Arcade.Sprite, wall: Phaser.Tilemaps.Tile) {\n    this.hitSound.play();\n    bullet.setActive(false);\n    bullet.destroy();\n    let facingDirection: string;\n    let angleToSet: number;\n    if (wall.faceBottom === false) {\n      facingDirection = '11';\n      angleToSet = 180;\n    } else if (wall.faceTop === false) {\n      facingDirection = '10';\n      angleToSet = 0;\n    } else if (wall.faceLeft === false) {\n      facingDirection = '00';\n      angleToSet = -90;\n    } else if (wall.faceRight === false) {\n      facingDirection = '01';\n      angleToSet = 90;\n    }\n    wall.properties.life--;\n    //@ts-ignore\n    if (wall.properties.destroyable === true && wall.properties.life === 2) {\n      this.wallLayer.putTileAt(15, wall.x, wall.y, true);\n      this.wallLayer.setCollisionByProperty({\n        collides: true\n      })\n    }\n    //@ts-ignore\n    else if (wall.properties.destroyable === true && wall.properties.life === 1) {\n      this.wallLayer.putTileAt(16, wall.x, wall.y);\n      this.wallLayer.setCollisionByProperty({\n        collides: true\n      })\n    }\n    // //@ts-ignore\n    else if (wall.properties.destroyable === true && wall.properties.life === 0) {\n      this.explosion = this.spawnExplosion(\n        wall.pixelX + wall.width / 2, \n        wall.pixelY + wall.height / 2, \n        CST.SPRITES.EFFECTS.EXPLOSION);\n      this.wallLayer.removeTileAt(wall.x, wall.y);\n      this.wallLayer.putTileAt(\n        Math.floor(Math.random() * (19 - 17 + 1) + 17), \n        wall.x, \n        wall.y\n        )\n      .setFlip(Math.round(Math.random()), Math.round(Math.random()));\n    }\n  }\n\n  finishLevel() {\n    if (this.factoryCounter === 0 && this.enemyAliveArray.length === 0) {\n      this.scene.start(CST.SCENES.TESTLEVEL, {\n        level: this.data.get('level') + 1\n      });\n    }\n  }\n\n  stopPlayer() {\n    if (this.player.active === true) {\n      this.player.setVelocity(0, 0);\n      this.tankIdleSound.play(undefined, {\n        loop: true,\n        volume: .3\n      })\n      this.tankMoveSound.stop();\n    }\n  }\n\n  makeAiDecisions() {\n    if (this.aiCounter > Math.round(Math.random() * (this.max - this.min + 1) + this.min)) {\n      this.makeAiDecision();\n    }\n    if (this.counter > Math.round(Math.random() * (this.maxBullet - this.minBullet + 1) + this.minBullet)) {\n      this.aiShoot();\n    }\n    if (this.enemySpawn1Counter > 10000) {\n      this.spawnEnemy();\n    }\n  }\n\n  onExplosion() {\n    if (this.isExplosion) {\n      if (!this.explosion.anims.isPlaying) {\n        this.explosion.destroy();\n        this.isExplosion = false;\n      }\n    }\n  }\n}","/**\n  @type {import(\"../typings/phaser\")}\n */\n\n// var game = new Phaser.Game(1920, 1600, Phaser.AUTO, 'gameWindow')\nimport { LoadScene } from \"./Scenes/loadScene\";\nimport { MenuScene } from \"./Scenes/menuScene\";\nimport { PlayScene } from \"./Scenes/playScene\";\n\nlet game = new Phaser.Game({\n    width: 800,\n    height: 640,\n    scene:[\n        LoadScene,\n        MenuScene,\n        PlayScene\n    ],\n    render: {\n        pixelArt: true\n    },\n    physics: {\n        default: \"arcade\",\n        arcade: {\n            debug: false\n        }\n    }\n})\n\n\n"]}